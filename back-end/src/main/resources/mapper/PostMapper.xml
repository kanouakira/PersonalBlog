<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kanouakira.vueblog.mapper.PostMapper">
    <resultMap id="postMap" type="com.kanouakira.vueblog.entity.Post">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="summary" property="summary"/>
        <result column="body" property="body"/>
        <result column="created" property="created"/>
        <result column="views" property="views"/>
        <result column="author_id" property="authorId"/>
        <result column="only_self_visible" property="onlySelfVisible"/>
        <association property="user" javaType="com.kanouakira.vueblog.entity.User">
            <id column="author_id" property="id"/>
            <result column="username" property="username"/>
            <result column="name" property="name"/>
            <result column="avatar" property="avatar"/>
            <result column="email" property="email"/>
            <result column="status" property="status"/>
            <result column="created" property="created"/>
            <result column="lastLogin" property="last_login"/>
        </association>
        <collection property="tags" column="id" ofType="com.kanouakira.vueblog.entity.Tag" select="getTags"/>
        <collection property="comments" column="id" ofType="commentMap" select="getComments"/>
    </resultMap>

    <!--    根据文章标签查询-->
    <select id="selectCustomPage" resultMap="postMap" parameterType="java.lang.Long">
        SELECT post.*,user.* FROM post left join user on post.author_id = user.id
        <if test="manage == ''">
        where post.id in
        (select post.id from tag_relationship
        left join tag on tag_relationship.tag_id = tag.id
        left join post on tag_relationship.post_id = post.id
        where (post.only_self_visible = '0' <if test="id != null">or post.author_id = #{id} </if>) and tag.name like concat('%',#{tag},'%')
        union
        select id from post where id not in (select post_id from tag_relationship ) and (only_self_visible = '0' <if test="id != null">or author_id = #{id}</if>))
        <if test="search != ''">and post.title like concat('%',#{search},'%')</if>
        </if>
        order by post.created desc
    </select>

    <!--    根据id返回文章-->
    <select id="selectPostById" resultMap="postMap" parameterType="java.lang.Long">
        SELECT * FROM post left join user on post.author_id = user.id where post.id = #{id}
    </select>

    <!--    根据id更新文章-->
    <update id="updatePost" parameterType="com.kanouakira.vueblog.entity.Post">
        update post
        <set>
            <if test="title != null">title=#{title},</if>
            <if test="body != null">body = #{body},</if>
            <if test="summary != null">summary = #{summary},</if>
            <if test="created != null">created = #{created},</if>
            <if test="views != null">views = #{views},</if>
            <if test="onlySelfVisible != null">only_self_visible = #{onlySelfVisible},</if>
            <if test="authorId != null">author_id = #{authorId},</if>
        </set>
        where
        id = #{id}
    </update>

<!--    嵌套查询文章的标签-->
    <select id="getTags" resultType="com.kanouakira.vueblog.entity.Tag" parameterType="java.lang.Long">
        SELECT * FROM tag_relationship left join tag on tag_relationship.tag_id = tag.id where tag_relationship.post_id = #{id}
    </select>

    <resultMap id="commentMap" type="com.kanouakira.vueblog.entity.Comment">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="post_id" property="postId"/>
        <result column="status" property="status"/>
        <result column="body" property="body"/>
        <result column="parent_comment_id" property="parentCommentId"/>
        <result column="reply_comment_id" property="replyCommentId"/>
        <result column="comment_level" property="commentLevel"/>
        <result column="created" property="created"/>
        <result column="username" property="username"/>
        <result column="name" property="name"/>
        <result column="reply_username" property="replyUsername"/>
        <result column="reply_name" property="replyName"/>
        <collection property="childComments" column="id" ofType="commentMap" select="getChildComments"/>
<!--        <association property="replyComment" column="reply_id" javaType="com.kanouakira.vueblog.entity.Comment" select="getReplyComment">-->
<!--            <id column="reply_id" property="replyCommentId"/>-->
<!--            <result column="userId" property="user_id"/>-->
<!--            <result column="postId" property="post_id"/>-->
<!--            <result column="status" property="status"/>-->
<!--            <result column="body" property="body"/>-->
<!--            <result column="parent_comment_id" property="parentCommentId"/>-->
<!--            <result column="reply_comment_id" property="replyCommentId"/>-->
<!--            <result column="comment_level" property="commentLevel"/>-->
<!--            <result column="reply_username" property="username"/>-->
<!--        </association>-->
<!--        <association property="user" javaType="com.kanouakira.vueblog.entity.User">-->
<!--            <id column="userId" property="id"/>-->
<!--            <result column="username" property="username"/>-->
<!--            <result column="avatar" property="avatar"/>-->
<!--            <result column="email" property="email"/>-->
<!--            <result column="status" property="status"/>-->
<!--            <result column="created" property="created"/>-->
<!--            <result column="lastLogin" property="last_login"/>-->
<!--        </association>-->
<!--        <association property="user" column="userId" javaType="com.kanouakira.vueblog.entity.User" select="getCommentUser"/>-->
    </resultMap>

<!--    嵌套查询文章下的评论-->
<!--    SELECT c1.*,u1.*,c2.id as reply_id,u2.username as reply_username-->
<!--    FROM comment c1-->
<!--    inner join user u1 on c1.user_id = u1.id-->
<!--    left join comment c2 on c1.reply_comment_id = c2.id-->
<!--    left join user u2 on c2.user_id = u2.id-->
<!--    where c1.post_id = #{id}-->
<!--    order by c1.created desc-->
<!--    select comment.*,user.username,user.name from comment left join user on comment.user_id = user.id where comment.post_id = #{id} order by comment.created desc-->
    <select id="getComments" resultMap="commentMap" parameterType="java.lang.Long">
        SELECT c1.*,u1.*,c2.id as reply_id,u2.username as reply_username,u2.name as reply_name
        FROM comment c1
        inner join user u1 on c1.user_id = u1.id
        left join comment c2 on c1.reply_comment_id = c2.id
        left join user u2 on c2.user_id = u2.id
        where c1.post_id = #{id}
        order by c1.created desc
    </select>

<!--    嵌套查询评论下的子评论-->
    <!--    SELECT c1.*,user.* FROM comment left join user on comment.user_id = user.id where comment.parent_comment_id = #{id} order by comment.created desc-->
    <select id="getChildComments" resultMap="commentMap" parameterType="java.lang.Long">
        SELECT c1.*,u1.*,c2.id as reply_id,u2.username as reply_username,u2.name as reply_name
        FROM comment c1
        left join user u1 on c1.user_id = u1.id
        left join comment c2 on c1.reply_comment_id = c2.id
        left join user u2 on c2.user_id = u2.id
        where c1.parent_comment_id = #{id}
        order by c1.created desc
    </select>

<!--    嵌套查询评论下的回复评论-->
<!--    <select id="getReplyComment" resultType="com.kanouakira.vueblog.entity.Comment" parameterType="java.lang.Long">-->
<!--        select comment.*,user.username as reply_user_name FROM comment left join user on comment.user_id = user.id where comment.id = #{id}-->
<!--    </select>-->

</mapper>
